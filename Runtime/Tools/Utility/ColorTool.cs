using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace NonsensicalKit.Tools
{
    public  static class ColorTool
    {
        private static string[] ColorChineseName = new string[]
        {
           "黑色",
           "暗灰色",
           "昏灰",
           "灰色",
           "暗灰色(X11)",
           "银色",
           "浅灰色",
           "庚斯博罗灰",
           "白烟色",
           "白色",
           "雪色",
           "铁灰色",
           "沙棕",
           "玫瑰褐",
           "浅珊瑚色",
           "印度红",
           "褐色",
           "砖红色",
           "栗色",
           "暗红",
           "鲜红",
           "红色",
           "柿子橙",
           "雾玫瑰色",
           "鲑红",
           "腥红",
           "蕃茄红",
           "暗鲑红",
           "珊瑚红",
           "橙色",
           "橙红",
           "浅鲑红",
           "朱红",
           "赭黄",
           "热带橙",
           "驼色",
           "杏黄",
           "椰褐",
           "海贝色",
           "鞍褐",
           "巧克力色",
           "阳橙",
           "沙褐",
           "铜色",
           "亚麻色",
           "蜜橙",
           "乌贼墨色",
           "燃橙",
           "赭色",
           "秘鲁色",
           "橘色",
           "暗橙",
           "古董白",
           "日晒色",
           "硬木色",
           "粉扑桃色",
           "那瓦霍白",
           "鹿皮鞋色",
           "陶坯黄",
           "杏仁白",
           "蕃木瓜色",
           "玉米丝色",
           "万寿菊黄",
           "灰土色",
           "卡其色",
           "旧蕾丝色",
           "小麦色",
           "桃色",
           "花卉白",
           "金菊色",
           "暗金菊色",
           "咖啡色",
           "茉莉黄",
           "琥珀色",
           "铬黄",
           "金色",
           "浅卡其色",
           "暗卡其色",
           "含羞草黄",
           "灰金菊色",
           "米色",
           "浅金菊黄",
           "柠檬绸色",
           "奶油色",
           "浅黄色",
           "象牙色",
           "香槟黄",
           "芥末黄",
           "月黄",
           "橄榄色",
           "鲜黄",
           "黄色",
           "苔藓绿",
           "萤光黄色",
           "橄榄军服绿",
           "黄绿",
           "暗橄榄绿",
           "苹果绿",
           "绿黄",
           "草绿",
           "草坪绿",
           "查特酒绿",
           "叶绿",
           "嫩绿",
           "明亮绿",
           "钴绿",
           "蜜瓜绿",
           "暗海绿",
           "浅绿色",
           "灰绿",
           "常春藤绿",
           "森林绿",
           "柠檬绿",
           "暗绿",
           "绿色",
           "青柠色",
           "孔雀石绿",
           "薄荷绿",
           "青瓷绿",
           "孔雀石绿",
           "铬绿",
           "苍色",
           "海绿",
           "中海绿",
           "绿松石绿",
           "碧绿",
           "薄荷奶油色",
           "春绿",
           "孔雀绿",
           "中春绿色",
           "中碧蓝色",
           "碧蓝色",
           "青蓝",
           "水蓝",
           "浅水蓝",
           "土耳其蓝",
           "绿松石色",
           "浅海绿色",
           "中绿松石色",
           "浅蓝",
           "灰绿松石色",
           "暗岩灰",
           "蓝绿色",
           "暗青",
           "浅青色",
           "青色",
           "暗绿松石色",
           "军服蓝",
           "孔雀蓝",
           "浓蓝",
           "浅蓝色",
           "粉蓝",
           "灰蓝",
           "爱丽丝蓝",
           "萨克斯蓝",
           "深天蓝",
           "水手蓝",
           "普鲁士蓝",
           "道奇蓝",
           "矿蓝",
           "蔚蓝色",
           "天蓝色",
           "韦奇伍德瓷蓝",
           "浅钢蓝色",
           "灰丹宁布色",
           "鼠尾草蓝",
           "暗粉蓝",
           "钴蓝",
           "蓝宝石色",
           "国际奇连蓝",
           "蔚蓝",
           "品蓝",
           "暗矿蓝",
           "极浓海蓝",
           "幽灵白",
           "薰衣草雾",
           "薰衣草蓝",
           "长春花色",
           "藏青",
           "暗蓝",
           "中蓝",
           "蓝色",
           "午夜蓝",
           "天青石蓝",
           "浅灰紫",
           "钢青色",
           "暗岩蓝",
           "靛色",
           "紫色",
           "岩蓝",
           "矢车菊蓝",
           "中岩蓝",
           "岩灰",
           "浅岩灰色",
           "堇紫色",
           "蓝紫",
           "暗洋红",
           "梅红色",
           "天空蓝",
           "浅天蓝",
           "勃艮第酒红",
           "宗主教紫",
           "中紫",
           "暗紫",
           "暗兰紫",
           "紫水晶色",
           "中兰紫",
           "薰衣草紫",
           "三色堇紫",
           "锦葵紫",
           "优品紫红",
           "淡紫丁香色",
           "矿紫",
           "浅紫色",
           "紫丁香色",
           "紫藤色",
           "梅红色",
           "薰衣草洋红色",
           "缬草紫",
           "木槿紫",
           "蓟紫",
           "铁线莲紫",
           "品红色",
           "品红色",
           "兰紫色",
           "浅珍珠红",
           "陈玫红",
           "浅玫瑰红",
           "中青紫红",
           "洋玫瑰红",
           "玫瑰红",
           "红宝石色",
           "山茶红",
           "深粉红",
           "火鹤红",
           "浅珊瑚红",
           "暖粉红",
           "尖晶石红",
           "胭脂红",
           "浅粉红",
           "枢机红",
           "薰衣草紫红",
           "灰紫红",
           "樱桃红",
           "浅鲑红",
           "绯红",
           "粉红",
           "浅粉红",
           "壳黄红",
           "茜红",
        };

        private static string[] ColorEnglishName = new string[]
        {
            "Black",
            "Dark Gray",
            "Dim Gray",
            "Gray",
            "Dark Gray (X11)",
            "Silver",
            "Light Gray",
            "Gainsboro",
            "White Smoke",
            "White",
            "Snow",
            "Iron Gray",
            "Sand Beige",
            "Rosy Brown",
            "Light Coral",
            "Indian Red",
            "Brown",
            "Fire Brick",
            "Maroon",
            "Dark Red",
            "Strong Red",
            "Red",
            "Persimmon",
            "Misty Rose",
            "Salmon",
            "Scarlet",
            "Tomato",
            "Dark Salmon",
            "Coral",
            "Orange",
            "Orange Red",
            "Light Salmon",
            "Vermilion",
            "Sienna",
            "Tropical Orange",
            "Camel",
            "Apricot",
            "Coconut Brown",
            "Seashell",
            "Saddle Brown",
            "Chocolate",
            "Sun Orange",
            "Sand Brown",
            "Bronze",
            "Linen",
            "Honey Orange",
            "Sepia",
            "Burnt Orange",
            "Ocher",
            "Peru",
            "Tangerine",
            "Dark Orange",
            "Antique White",
            "Tan",
            "Burly Wood",
            "Peach Puff",
            "Navajo White",
            "Moccasin",
            "Bisque",
            "Blanched Almond",
            "Papaya Whip",
            "Cornsilk",
            "Marigold",
            "Pale Ocre",
            "Khaki",
            "Old Lace",
            "Wheat",
            "Peach",
            "Floral White",
            "Goldenrod",
            "Dark Goldenrod",
            "Coffee",
            "Jasmine",
            "Amber",
            "Chrome Yellow",
            "Golden",
            "Light Khaki",
            "Dark Khaki",
            "Mimosa",
            "Pale Goldenrod",
            "Beige",
            "Light Goldenrod Yellow",
            "Lemon Chiffon",
            "Cream",
            "Light Yellow",
            "Ivory",
            "Champagne Yellow",
            "Mustard",
            "Moon Yellow",
            "Olive",
            "Canary Yellow",
            "Yellow",
            "Moss Green",
            "Fluorescent yellow, Electric lime",
            "Olive Drab",
            "Yellow Green",
            "Dark Olive Green",
            "Apple Green",
            "Green Yellow",
            "Grass Green",
            "Lawn Green",
            "Chartreuse",
            "Foliage Green",
            "Fresh Leaves",
            "Bright Green",
            "Cobalt Green",
            "Honeydew",
            "Dark Sea Green",
            "Light Green",
            "Pale Green",
            "Ivy Green",
            "Forest Green",
            "Lime Green",
            "Dark Green",
            "Green",
            "Lime",
            "Malachite",
            "Mint",
            "Celadon",
            "Very Light Malachite Green",
            "Viridian",
            "Horizon Blue",
            "Sea Green",
            "Medium Sea Green",
            "Turquoise Green",
            "Emerald",
            "Mint Cream",
            "Spring Green",
            "Peacock Green",
            "Medium Spring Green",
            "Medium Aquamarine",
            "Aquamarine",
            "Cyan Blue",
            "Aqua Blue",
            "Light Aqua Blue",
            "Turquoise Blue",
            "Turquoise",
            "Light Sea Green",
            "Medium Turquoise",
            "Baby Blue",
            "Pale Turquoise",
            "Dark Slate Gray",
            "Teal",
            "Dark Cyan",
            "Light Cyan",
            "Cyan",
            "Dark Turquoise",
            "Cadet Blue",
            "Peacock Blue",
            "Strong Blue",
            "Light Blue",
            "Powder Blue",
            "Pale Blue",
            "Alice Blue",
            "Saxe Blue",
            "Deep Sky Blue",
            "Marine Blue",
            "Prussian blue",
            "Dodger Blue",
            "Mineral Blue",
            "Cerulean",
            "Azure",
            "Wedgwood Blue",
            "Light Steel Blue",
            "Pale Denim",
            "Salvia Blue",
            "Dark Powder Blue",
            "Cobalt Blue",
            "Sapphire",
            "International Klein Blue",
            "Cerulean blue",
            "Royal Blue",
            "Dark Mineral Blue",
            "Ultramarine",
            "Ghost White",
            "Lavender Mist",
            "Lavender Blue",
            "Periwinkle",
            "Navy Blue",
            "Dark Blue",
            "Medium Blue",
            "Blue",
            "Midnight Blue",
            "Lapis Lazuli",
            "Grayish Purple",
            "Steel Blue",
            "Dark Slate Blue",
            "Indigo",
            "Purple",
            "Slate Blue",
            "Cornflower Blue",
            "Medium Slate Blue",
            "Slate Gray",
            "Light Slate Gray",
            "Violet",
            "Blue Violet",
            "Dark Magenta",
            "Plum",
            "Sky Blue",
            "Light Sky Blue",
            "Burgundy",
            "Patriarch",
            "Medium Purple",
            "Dark Violet",
            "Dark Orchid",
            "Amethyst",
            "Medium Orchid",
            "Lavender",
            "Pansy",
            "Mallow",
            "Opera Mauve",
            "Pail Lilac",
            "Mineral Violet",
            "Light Violet",
            "Lilac",
            "Wisteria",
            "Medium Lavender Magenta",
            "Lavender Magenta",
            "Heliotrope",
            "Mauve",
            "Thistle",
            "Clematis",
            "Magenta",
            "Fuchsia",
            "Orchid",
            "Pearl Pink",
            "Old Rose",
            "Rose Pink",
            "Medium Violet Red",
            "Magenta Rose",
            "Rose",
            "Ruby",
            "Camellia",
            "Deep Pink",
            "Flamingo",
            "Coral Pink",
            "Hot Pink",
            "Spinel Red",
            "Carmine",
            "Baby Pink",
            "Cardinal Red",
            "Lavender Blush",
            "Pale Violet Red",
            "Cerise",
            "Salmon Pink",
            "Crimson",
            "Pink",
            "Light Pink",
            "Shell Pink",
            "Alizarin Crimson",
        };

        private static Vector3Int[] ColorRGB = new Vector3Int[]
        {
            new Vector3Int(    0,    0 ,  0 ),
            new Vector3Int(128 ,128, 128   ),
            new Vector3Int(105 ,105, 105   ),
            new Vector3Int(128 ,128, 128   ),
            new Vector3Int(169 ,169, 169   ),
            new Vector3Int(192 ,192, 192   ),
            new Vector3Int(211 ,211, 211   ),
            new Vector3Int(220 ,220, 220   ),
            new Vector3Int(245 ,245, 245   ),
            new Vector3Int(255 ,255, 255   ),
            new Vector3Int(255 ,250, 250   ),
            new Vector3Int(98  ,91 , 87    ),
            new Vector3Int(230 ,195, 195   ),
            new Vector3Int(188 ,143, 143   ),
            new Vector3Int(240 ,128, 128   ),
            new Vector3Int(205 ,92 , 92    ),
            new Vector3Int(165 ,42 , 42    ),
            new Vector3Int(178 ,34 , 34    ),
            new Vector3Int(128 ,0  , 0     ),
            new Vector3Int(139 ,0  , 0     ),
            new Vector3Int(230 ,0  , 0     ),
            new Vector3Int(255 ,0  , 0     ),
            new Vector3Int(255 ,77 , 64    ),
            new Vector3Int(255 ,228, 225   ),
            new Vector3Int(250 ,128, 114   ),
            new Vector3Int(255 ,34 , 0     ),
            new Vector3Int(255 ,99 , 71    ),
            new Vector3Int(233 ,150, 122   ),
            new Vector3Int(255 ,127, 80    ),
            new Vector3Int(255 ,102, 0     ),
            new Vector3Int(255 ,69 , 0     ),
            new Vector3Int(255 ,160, 122   ),
            new Vector3Int(255 ,77 , 0     ),
            new Vector3Int(160 ,82 , 45    ),
            new Vector3Int(255 ,128, 51    ),
            new Vector3Int(161 ,107, 71    ),
            new Vector3Int(230 ,153, 102   ),
            new Vector3Int(77  ,31 , 0     ),
            new Vector3Int(255 ,245, 238   ),
            new Vector3Int(139 ,69 , 19    ),
            new Vector3Int(210 ,105, 30    ),
            new Vector3Int(255 ,115, 0     ),
            new Vector3Int(244 ,164, 96    ),
            new Vector3Int(184 ,115, 51    ),
            new Vector3Int(250 ,240, 230   ),
            new Vector3Int(255 ,179, 102   ),
            new Vector3Int(112 ,66 , 20    ),
            new Vector3Int(204 ,85 , 0     ),
            new Vector3Int(204 ,119, 34    ),
            new Vector3Int(205 ,133, 63    ),
            new Vector3Int(242 ,133, 0     ),
            new Vector3Int(255 ,140, 0     ),
            new Vector3Int(250 ,235, 215   ),
            new Vector3Int(210 ,180, 140   ),
            new Vector3Int(222 ,184, 135   ),
            new Vector3Int(255 ,218, 185   ),
            new Vector3Int(255 ,222, 173   ),
            new Vector3Int(255 ,228, 181   ),
            new Vector3Int(255 ,228, 196   ),
            new Vector3Int(255 ,235, 205   ),
            new Vector3Int(255 ,239, 213   ),
            new Vector3Int(255 ,248, 220   ),
            new Vector3Int(255 ,153, 0     ),
            new Vector3Int(204 ,179, 140   ),
            new Vector3Int(153 ,107, 31    ),
            new Vector3Int(253 ,245, 230   ),
            new Vector3Int(245 ,222, 179   ),
            new Vector3Int(255 ,229, 180   ),
            new Vector3Int(255 ,250, 240   ),
            new Vector3Int(218 ,165, 32    ),
            new Vector3Int(184 ,134, 11    ),
            new Vector3Int(77  ,57 , 0     ),
            new Vector3Int(230 ,195, 92    ),
            new Vector3Int(255 ,191, 0     ),
            new Vector3Int(230 ,184, 0     ),
            new Vector3Int(255 ,215, 0     ),
            new Vector3Int(240 ,230, 140   ),
            new Vector3Int(189 ,183, 107   ),
            new Vector3Int(230 ,217, 51    ),
            new Vector3Int(238 ,232, 170   ),
            new Vector3Int(245 ,245, 220   ),
            new Vector3Int(250 ,250, 210   ),
            new Vector3Int(255 ,250, 205   ),
            new Vector3Int(255 ,253, 208   ),
            new Vector3Int(255 ,255, 224   ),
            new Vector3Int(255 ,255, 240   ),
            new Vector3Int(255 ,255, 153   ),
            new Vector3Int(204 ,204, 77    ),
            new Vector3Int(255 ,255, 77    ),
            new Vector3Int(128 ,128, 0     ),
            new Vector3Int(255 ,239, 0     ),
            new Vector3Int(255 ,255, 0     ),
            new Vector3Int(105 ,119, 35    ),
            new Vector3Int(204 ,255, 0     ),
            new Vector3Int(107 ,142, 35    ),
            new Vector3Int(154 ,205, 50    ),
            new Vector3Int(85  ,107, 47    ),
            new Vector3Int(140 ,230, 0     ),
            new Vector3Int(173 ,255, 47    ),
            new Vector3Int(153 ,230, 77    ),
            new Vector3Int(124 ,252, 0     ),
            new Vector3Int(127 ,255, 0     ),
            new Vector3Int(115 ,184, 57    ),
            new Vector3Int(153 ,255, 77    ),
            new Vector3Int(102 ,255, 0     ),
            new Vector3Int(102 ,255, 89    ),
            new Vector3Int(240 ,255, 240   ),
            new Vector3Int(143 ,188, 143   ),
            new Vector3Int(144 ,238, 144   ),
            new Vector3Int(152 ,251, 152   ),
            new Vector3Int(54  ,191, 54    ),
            new Vector3Int(34  ,139, 34    ),
            new Vector3Int(50  ,205, 50    ),
            new Vector3Int(0   ,102, 0     ),
            new Vector3Int(0   ,128, 0     ),
            new Vector3Int(0   ,255, 0     ),
            new Vector3Int(34  ,195, 46    ),
            new Vector3Int(22  ,152, 43    ),
            new Vector3Int(172 ,225, 175   ),
            new Vector3Int(115 ,230, 140   ),
            new Vector3Int(18  ,116, 54    ),
            new Vector3Int(184 ,221, 200   ),
            new Vector3Int(46  ,139, 87    ),
            new Vector3Int(60  ,179, 113   ),
            new Vector3Int(77  ,230, 128   ),
            new Vector3Int(80  ,200, 120   ),
            new Vector3Int(245 ,255, 250   ),
            new Vector3Int(0   ,255, 128   ),
            new Vector3Int(0   ,161, 92    ),
            new Vector3Int(0   ,250, 154   ),
            new Vector3Int(102 ,205, 170   ),
            new Vector3Int(127 ,255, 212   ),
            new Vector3Int(13  ,191, 140   ),
            new Vector3Int(102 ,255, 230   ),
            new Vector3Int(175 ,223, 228   ),
            new Vector3Int(0   ,255, 239   ),
            new Vector3Int(68  ,224, 208   ),
            new Vector3Int(32  ,178, 170   ),
            new Vector3Int(72  ,209, 204   ),
            new Vector3Int(137 ,207, 240   ),
            new Vector3Int(175 ,238, 238   ),
            new Vector3Int(47  ,79 , 79    ),
            new Vector3Int(0   ,128, 128   ),
            new Vector3Int(0   ,139, 139   ),
            new Vector3Int(224 ,255, 255   ),
            new Vector3Int(0   ,255, 255   ),
            new Vector3Int(0   ,206, 209   ),
            new Vector3Int(95  ,158, 160   ),
            new Vector3Int(0   ,128, 140   ),
            new Vector3Int(0   ,99 , 116   ),
            new Vector3Int(173 ,216, 230   ),
            new Vector3Int(176 ,224, 230   ),
            new Vector3Int(209 ,237, 242   ),
            new Vector3Int(240 ,248, 255   ),
            new Vector3Int(71  ,152, 179   ),
            new Vector3Int(0   ,191, 255   ),
            new Vector3Int(0   ,71 , 125   ),
            new Vector3Int(0   ,49 , 83    ),
            new Vector3Int(30  ,144, 255   ),
            new Vector3Int(0   ,77 , 153   ),
            new Vector3Int(0   ,123, 167   ),
            new Vector3Int(0   ,127, 255   ),
            new Vector3Int(86  ,134, 191   ),
            new Vector3Int(176 ,196, 222   ),
            new Vector3Int(94  ,134, 193   ),
            new Vector3Int(77  ,128, 230   ),
            new Vector3Int(0   ,51 , 153   ),
            new Vector3Int(0   ,71 , 171   ),
            new Vector3Int(8   ,37 , 103   ),
            new Vector3Int(0   ,47 , 167   ),
            new Vector3Int(42  ,82 , 190   ),
            new Vector3Int(65  ,105, 225   ),
            new Vector3Int(36  ,54 , 125   ),
            new Vector3Int(0   ,51 , 255   ),
            new Vector3Int(248 ,248, 255   ),
            new Vector3Int(230 ,230, 250   ),
            new Vector3Int(204 ,204, 255   ),
            new Vector3Int(195 ,205, 230   ),
            new Vector3Int(0   ,0  , 128   ),
            new Vector3Int(0   ,0  , 139   ),
            new Vector3Int(0   ,0  , 205   ),
            new Vector3Int(0   ,0  , 255   ),
            new Vector3Int(25  ,25 , 112   ),
            new Vector3Int(38  ,97 , 156   ),
            new Vector3Int(134 ,116, 161   ),
            new Vector3Int(70  ,130, 180   ),
            new Vector3Int(72  ,61 , 139   ),
            new Vector3Int(75  ,0  , 128   ),
            new Vector3Int(106 ,13 , 173   ),
            new Vector3Int(106 ,90 , 205   ),
            new Vector3Int(100 ,149, 237   ),
            new Vector3Int(123 ,104, 238   ),
            new Vector3Int(112 ,128, 144   ),
            new Vector3Int(119 ,136, 153   ),
            new Vector3Int(128 ,0  , 255   ),
            new Vector3Int(138 ,43 , 226   ),
            new Vector3Int(139 ,0  , 139   ),
            new Vector3Int(142 ,69 , 133   ),
            new Vector3Int(135 ,206, 235   ),
            new Vector3Int(135 ,206, 250   ),
            new Vector3Int(128 ,0  , 32    ),
            new Vector3Int(128 ,0  , 128   ),
            new Vector3Int(147 ,112, 219   ),
            new Vector3Int(148 ,0  , 211   ),
            new Vector3Int(153 ,51 , 204   ),
            new Vector3Int(153 ,102, 204   ),
            new Vector3Int(186 ,85 , 211   ),
            new Vector3Int(181 ,126, 220   ),
            new Vector3Int(116 ,0  , 161   ),
            new Vector3Int(217 ,77 , 255   ),
            new Vector3Int(183 ,132, 167   ),
            new Vector3Int(230 ,207, 230   ),
            new Vector3Int(163 ,157, 174   ),
            new Vector3Int(176 ,157, 185   ),
            new Vector3Int(200 ,162, 200   ),
            new Vector3Int(201 ,160, 220   ),
            new Vector3Int(221 ,160, 221   ),
            new Vector3Int(238 ,130, 238   ),
            new Vector3Int(223 ,115, 255   ),
            new Vector3Int(224 ,176, 255   ),
            new Vector3Int(216 ,191, 216   ),
            new Vector3Int(204 ,163, 204   ),
            new Vector3Int(255 ,0  , 255   ),
            new Vector3Int(244 ,0  , 161   ),
            new Vector3Int(218 ,112, 214   ),
            new Vector3Int(255 ,179, 230   ),
            new Vector3Int(192 ,128, 129   ),
            new Vector3Int(255 ,102, 204   ),
            new Vector3Int(199 ,21 , 133   ),
            new Vector3Int(255 ,13 , 166   ),
            new Vector3Int(255 ,0  , 127   ),
            new Vector3Int(204 ,0  , 128   ),
            new Vector3Int(230 ,57 , 149   ),
            new Vector3Int(255 ,20 , 147   ),
            new Vector3Int(230 ,138, 184   ),
            new Vector3Int(255 ,128, 191   ),
            new Vector3Int(255 ,105, 180   ),
            new Vector3Int(255 ,115, 179   ),
            new Vector3Int(230 ,0  , 92    ),
            new Vector3Int(255 ,217, 230   ),
            new Vector3Int(196 ,30 , 58    ),
            new Vector3Int(255 ,240, 245   ),
            new Vector3Int(219 ,112, 147   ),
            new Vector3Int(222 ,49 , 99    ),
            new Vector3Int(255 ,128, 153   ),
            new Vector3Int(220 ,20 , 60    ),
            new Vector3Int(255 ,192, 203   ),
            new Vector3Int(255 ,182, 193   ),
            new Vector3Int(255 ,179, 191   ),
            new Vector3Int(227 ,38 , 54    ),

        };

        // Note that Color32 and Color implictly convert to each other. You may pass a Color object to this method without first casting it.
        public static string ColorToHex(Color32 color)
        {
            string hex = color.r.ToString("X2") + color.g.ToString("X2") + color.b.ToString("X2") + color.a.ToString("X2");
            return hex;
        }

        public static Color HexToColor(string hex)
        {
            hex = hex.Replace("0x", "");//in case the string is formatted 0xFFFFFF
            hex = hex.Replace("#", "");//in case the string is formatted #FFFFFF
            byte a = 255;//assume fully visible unless specified in hex
            byte r = byte.Parse(hex.Substring(0, 2), System.Globalization.NumberStyles.HexNumber);
            byte g = byte.Parse(hex.Substring(2, 2), System.Globalization.NumberStyles.HexNumber);
            byte b = byte.Parse(hex.Substring(4, 2), System.Globalization.NumberStyles.HexNumber);
            //Only use alpha if the string has enough characters
            if (hex.Length == 8)
            {
                a = byte.Parse(hex.Substring(6, 2), System.Globalization.NumberStyles.HexNumber);
            }
            return new Color32(r, g, b, a);
        }


        public static string GetColorName(string hex)
        {
            return GetColorName(HexToColor(hex));
        }

        public static string GetColorName(Color color)
        {
            return GetColorName01(color.r, color.g, color.b);
        }

        public static string GetColorName01(float r, float g, float b)
        {
            return GetColorName(r * 255, g * 255, b * 255);
        }

        public static string GetColorName(float r, float g, float b, bool chineseName = true)
        {
            int index = 0;
            float minDistance = int.MaxValue;
            float distance = 0;
            for (int i = 0; i < ColorRGB.Length; i++)
            {
                distance = 0;
                distance += MathF.Abs(ColorRGB[i].x - r * 255);
                distance += MathF.Abs(ColorRGB[i].y - g * 255);
                distance += MathF.Abs(ColorRGB[i].z - b * 255);

                if (minDistance > distance)
                {
                    minDistance = distance;
                    index = i;
                }
            }
            return chineseName ? ColorChineseName[index] : ColorEnglishName[index];
        }
    }
}